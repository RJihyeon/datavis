{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\datavis_team\\\\dataviz\\\\src\\\\components\\\\\\uAC00\\uCD9C\\uC5EC\\uBD80\\\\RunExpComp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./RunExpComp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RunExpComp() {\n  _s();\n  const [data, setData] = useState([]);\n  const [categoryKey, setCategoryKey] = useState(\"학교급별\");\n  useEffect(() => {\n    d3.csv(\"/domestic_violence/가출_여부_및_이유_20240503234321_utf8.csv\").then(loadedData => {\n      console.log(loadedData); // 데이터 구조 확인\n      setData(loadedData);\n    });\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      updatePieChartAndLegend(categoryKey);\n    }\n  }, [data, categoryKey]);\n  const allCategories = {\n    성별: [\"남자\", \"여자\"],\n    학교급별: [\"초등학교\", \"중학교\", \"고등학교\"],\n    고교유형별: [\"일반계고\", \"특성화계고\"],\n    지역규모별: [\"대도시\", \"중소도시\", \"읍면지역\"],\n    가족유형별: [\"양부모가정\", \"한부모가정\", \"조손가정\", \"기타\"]\n  };\n  function updatePieChartAndLegend(categoryKey) {\n    const categories = allCategories[categoryKey];\n    const pieData = categories.map(category => {\n      const foundData = data.find(d => d[\"응답자유형별(2)\"] === category);\n      console.log(category, parseFloat(foundData[\"2023\"]));\n      return {\n        category,\n        value: foundData ? parseFloat(foundData[\"2023\"]) : 0,\n        // \"가출한 적이 있다\"에 해당하는 값\n        no: foundData ? 100 - parseFloat(foundData[\"2023\"]) : 0 // \"가출한 적이 없다\"에 해당하는 값\n      };\n    });\n    console.log(categories);\n    console.log(\"piedata\", pieData);\n    createPieChart(pieData[0], \"#viz3\"); //초기 차트 생성\n    createLegend(categoryKey, allCategories, \"#viz3\");\n  }\n  function createPieChart(data, selector) {\n    console.log(data.value, data.no);\n    d3.select(selector).select(\"svg\").remove();\n    const width = 300; // SVG의 너비\n    const height = 300; // SVG의 높이\n    const radius = Math.min(width, height) / 2; // 파이 차트 반지름\n\n    const svg = d3.select(selector).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    ///색상 팔레트\n    const customColors = [\"#C1AECD\", \"#7D7085\"];\n    const color = d3.scaleOrdinal(customColors);\n    const pieData = [{\n      category: \"가출한 적이 있다\",\n      value: data.value\n    }, {\n      category: \"가출한 적이 없다\",\n      value: data.no\n    }];\n    const pie = d3.pie().value(d => d.value);\n    const arc = d3.arc().innerRadius(0).outerRadius(radius * 0.8); // 외부 반지름 조정\n\n    const data_ready = pie(pieData);\n    svg.selectAll(\"path\").data(data_ready).enter().append(\"path\").attr(\"d\", arc).attr(\"fill\", (d, i) => color(i)).attr(\"stroke\", \"white\").style(\"stroke-width\", \"2px\");\n    svg.selectAll(\"text\").data(data_ready).enter().append(\"text\").text(d => `${d.data.category} (${d.data.value}%)`).attr(\"transform\", d => `translate(${arc.centroid(d)})`).style(\"text-anchor\", \"middle\").style(\"font-size\", \"12px\"); // 텍스트 크기 조정\n  }\n  function createLegend(categoryKey, categories, selector) {\n    // 기존의 레전드 요소를 모두 삭제\n    d3.select(selector).selectAll(\".legend\").remove();\n\n    // 새 범례 컨테이너 추가\n    const legend = d3.select(selector).append(\"div\").attr(\"class\", \"legend\");\n\n    // 범례 항목을 새로 추가\n    const legendEntries = legend.selectAll(\".legend-entry\").data(categories[categoryKey]) // 카테고리 키에 해당하는 카테고리 데이터 바인딩\n    .enter().append(\"div\").attr(\"class\", \"legend-entry\").text(d => d);\n\n    // 레전드 클릭 이벤트 리스너 추가\n    legendEntries.on(\"click\", (event, d) => {\n      // 클릭된 카테고리에 해당하는 데이터로 차트 업데이트\n      const pieData = categories[categoryKey].map(category => {\n        const foundData = data.find(dataItem => dataItem[\"응답자유형별(2)\"] === category);\n        return {\n          category,\n          value: foundData ? parseFloat(foundData[\"2023\"]) : 0,\n          no: foundData ? parseFloat(foundData[\"2023.1\"]) : 0\n        };\n      });\n\n      // 클릭한 카테고리에 해당하는 데이터로 파이 차트 업데이트\n      const selectedData = pieData.find(p => p.category === d);\n      createPieChart(selectedData, \"#viz3\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RunExpdiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Runaway-title\",\n      children: \"\\uAC00\\uCD9C \\uACBD\\uD5D8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: categoryKey,\n      onChange: e => setCategoryKey(e.target.value),\n      children: Object.keys(allCategories).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: key,\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"viz3\",\n      style: {\n        width: \"400px\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(RunExpComp, \"5WIj3WjOjNlYtpmxOZ9Ej8CKV8k=\");\n_c = RunExpComp;\nexport default RunExpComp;\nvar _c;\n$RefreshReg$(_c, \"RunExpComp\");","map":{"version":3,"names":["React","useEffect","useState","d3","jsxDEV","_jsxDEV","RunExpComp","_s","data","setData","categoryKey","setCategoryKey","csv","then","loadedData","console","log","length","updatePieChartAndLegend","allCategories","성별","학교급별","고교유형별","지역규모별","가족유형별","categories","pieData","map","category","foundData","find","d","parseFloat","value","no","createPieChart","createLegend","selector","select","remove","width","height","radius","Math","min","svg","append","attr","customColors","color","scaleOrdinal","pie","arc","innerRadius","outerRadius","data_ready","selectAll","enter","i","style","text","centroid","legend","legendEntries","on","event","dataItem","selectedData","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","Object","keys","key","id","_c","$RefreshReg$"],"sources":["C:/dev/datavis_team/dataviz/src/components/가출여부/RunExpComp.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./RunExpComp.css\";\n\nfunction RunExpComp() {\n  const [data, setData] = useState([]);\n  const [categoryKey, setCategoryKey] = useState(\"학교급별\");\n\n  useEffect(() => {\n    d3.csv(\"/domestic_violence/가출_여부_및_이유_20240503234321_utf8.csv\").then(\n      (loadedData) => {\n        console.log(loadedData); // 데이터 구조 확인\n        setData(loadedData);\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    if (data.length > 0) {\n      updatePieChartAndLegend(categoryKey);\n    }\n  }, [data, categoryKey]);\n\n  const allCategories = {\n    성별: [\"남자\", \"여자\"],\n    학교급별: [\"초등학교\", \"중학교\", \"고등학교\"],\n    고교유형별: [\"일반계고\", \"특성화계고\"],\n    지역규모별: [\"대도시\", \"중소도시\", \"읍면지역\"],\n    가족유형별: [\"양부모가정\", \"한부모가정\", \"조손가정\", \"기타\"],\n  };\n\n  function updatePieChartAndLegend(categoryKey) {\n    const categories = allCategories[categoryKey];\n    const pieData = categories.map((category) => {\n      const foundData = data.find((d) => d[\"응답자유형별(2)\"] === category);\n      console.log(category, parseFloat(foundData[\"2023\"]));\n      return {\n        category,\n        value: foundData ? parseFloat(foundData[\"2023\"]) : 0, // \"가출한 적이 있다\"에 해당하는 값\n        no: foundData ? 100 - parseFloat(foundData[\"2023\"]) : 0, // \"가출한 적이 없다\"에 해당하는 값\n      };\n    });\n\n    console.log(categories);\n    console.log(\"piedata\", pieData);\n    createPieChart(pieData[0], \"#viz3\"); //초기 차트 생성\n    createLegend(categoryKey, allCategories, \"#viz3\");\n  }\n  function createPieChart(data, selector) {\n    console.log(data.value, data.no);\n    d3.select(selector).select(\"svg\").remove();\n    const width = 300; // SVG의 너비\n    const height = 300; // SVG의 높이\n    const radius = Math.min(width, height) / 2; // 파이 차트 반지름\n\n    const svg = d3\n      .select(selector)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\n\n    ///색상 팔레트\n    const customColors = [\"#C1AECD\", \"#7D7085\"];\n    const color = d3.scaleOrdinal(customColors);\n\n    const pieData = [\n      { category: \"가출한 적이 있다\", value: data.value },\n      { category: \"가출한 적이 없다\", value: data.no },\n    ];\n\n    const pie = d3.pie().value((d) => d.value);\n    const arc = d3\n      .arc()\n      .innerRadius(0)\n      .outerRadius(radius * 0.8); // 외부 반지름 조정\n\n    const data_ready = pie(pieData);\n\n    svg\n      .selectAll(\"path\")\n      .data(data_ready)\n      .enter()\n      .append(\"path\")\n      .attr(\"d\", arc)\n      .attr(\"fill\", (d, i) => color(i))\n      .attr(\"stroke\", \"white\")\n      .style(\"stroke-width\", \"2px\");\n\n    svg\n      .selectAll(\"text\")\n      .data(data_ready)\n      .enter()\n      .append(\"text\")\n      .text((d) => `${d.data.category} (${d.data.value}%)`)\n      .attr(\"transform\", (d) => `translate(${arc.centroid(d)})`)\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"12px\"); // 텍스트 크기 조정\n  }\n\n  function createLegend(categoryKey, categories, selector) {\n    // 기존의 레전드 요소를 모두 삭제\n    d3.select(selector).selectAll(\".legend\").remove();\n\n    // 새 범례 컨테이너 추가\n    const legend = d3.select(selector).append(\"div\").attr(\"class\", \"legend\");\n\n    // 범례 항목을 새로 추가\n    const legendEntries = legend\n      .selectAll(\".legend-entry\")\n      .data(categories[categoryKey]) // 카테고리 키에 해당하는 카테고리 데이터 바인딩\n      .enter()\n      .append(\"div\")\n      .attr(\"class\", \"legend-entry\")\n      .text((d) => d);\n\n    // 레전드 클릭 이벤트 리스너 추가\n    legendEntries.on(\"click\", (event, d) => {\n      // 클릭된 카테고리에 해당하는 데이터로 차트 업데이트\n      const pieData = categories[categoryKey].map((category) => {\n        const foundData = data.find(\n          (dataItem) => dataItem[\"응답자유형별(2)\"] === category\n        );\n        return {\n          category,\n          value: foundData ? parseFloat(foundData[\"2023\"]) : 0,\n          no: foundData ? parseFloat(foundData[\"2023.1\"]) : 0,\n        };\n      });\n\n      // 클릭한 카테고리에 해당하는 데이터로 파이 차트 업데이트\n      const selectedData = pieData.find((p) => p.category === d);\n      createPieChart(selectedData, \"#viz3\");\n    });\n  }\n\n  return (\n    <div className=\"RunExpdiv\">\n      <h2 className=\"Runaway-title\">가출 경험</h2>\n\n      <select\n        value={categoryKey}\n        onChange={(e) => setCategoryKey(e.target.value)}\n      >\n        {Object.keys(allCategories).map((key) => (\n          <option key={key} value={key}>\n            {key}\n          </option>\n        ))}\n      </select>\n      <div id=\"viz3\" style={{ width: \"400px\", height: \"400px\" }}></div>\n    </div>\n  );\n}\n\nexport default RunExpComp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}